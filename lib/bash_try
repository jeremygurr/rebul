#!/bin/bash    # intended to be sourced from other scripts
# provides functions and aliases to make it easy to have one exit path per function








# must have trace var set before this is sourced

# usage example:
#   do_stuff() {
#     begin_function
#       open_connection || fail
#       begin_for ((i = 0; i < 10; i++)); do 
#         stuff || throw
#       end_for
#      
#       more_stuff
#     end_function
#     close_connection
#     handle_return
#   }

shopt -s expand_aliases      # make sure aliases are expanded even for non-interactive scripts

bash_trace=${bash_trace:-100}

if [ $trace -gt $bash_trace ]; then
  # deprecated
  alias            try='let trace--; [ $trace -lt $bash_trace ] && set +x || set -x; local return_value=0; while true; do'
  alias        end_try='break; done; [ $trace -ge $bash_trace ] && set -x; let trace++'
  # use these instead
  alias begin_function='let trace--; [ $trace -lt $bash_trace ] && set +x || set -x; local return_value=0; while true; do'
  alias    begin_while='let trace--; [ $trace -lt $bash_trace ] && set +x || set -x;       return_value=0; while'
  alias      begin_for='let trace--; [ $trace -lt $bash_trace ] && set +x || set -x;       return_value=0; for'
  alias   end_function='break; done; [ $trace -ge $bash_trace ] && set -x; let trace++'
  alias      end_while='       done; [ $trace -ge $bash_trace ] && set -x; let trace++; [ $return_value != 0 ] && break'
  alias        end_for='       done; [ $trace -ge $bash_trace ] && set -x; let trace++; [ $return_value != 0 ] && break'
else
  # deprecated
  alias            try='let trace--; local return_value=0; while true; do'
  alias        end_try='break; done; let trace++'
  # use these instead
  alias begin_function='let trace--; local return_value=0; while true; do'
  alias    begin_while='let trace--; return_value=0; while'
  alias      begin_for='let trace--; return_value=0; for'
  alias   end_function='break; done; let trace++'
  alias      end_while='       done; let trace++; [ $return_value != 0 ] && break'
  alias        end_for='       done; let trace++; [ $return_value != 0 ] && break'
fi

# to avoid bash syntax parsing problems
alias doo='do'

alias fail='{ return_value=1; break; }'
alias failed='[ $return_value -gt 0 ]'
alias succeed='{ return_value=0; break; }'
alias succeeded='[ $return_value -eq 0 ]'

# should be placed after any loop inside of an exception catching block
# deprecated: not needed if begin_while / end_while etc are used
alias maybe_break='[ $return_value == 0 ] || break'
alias maybe_exit='[ $return_value == 0 ] || exit 1'

# should be at the end of every function which contains a try / end_try block
alias handle_return='return $return_value'
alias handle_exit='exit $return_value'

